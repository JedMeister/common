#!/bin/sh -ex

fatal() { echo "FATAL [$(basename $0)]: $@" 1>&2; exit 1; }

TOMCAT=tomcat10

CATALINA_HOME="/usr/share/$TOMCAT"
CATALINA_BASE="/var/lib/$TOMCAT"
CATALINA_TMPDIR="$CATALINA_BASE/temp"

# identify JVM to use
## We check for openjdk 17
[ -e /usr/lib/jvm/java-17-openjdk-amd64 ] && JVM=java-17-openjdk-amd64
[ -z "$JVM" ] && fatal "JVM to use could not be identified"

# configure java/tomcat environment
cat >> /etc/environment<<EOF
CATALINA_HOME="$CATALINA_HOME"
CATALINA_BASE="$CATALINA_BASE"
CATALINA_OPTS="-server -Xms384M -Xmx512M -XX:MaxPermSize=256M"
JAVA_HOME="/usr/lib/jvm/${JVM}"
EOF

# this may not be 100% safe
JINFO=$(ls /usr/lib/jvm/.*java*17*jinfo)
JINFO=${JINFO%.jinfo}
JINFO=${JINFO#*.}
# not sure if this is actually needed
update-java-alternatives --jre-headless -s $JINFO
sed -i "s/^#JAVA_HOME.*/JAVA_HOME=\/usr\/lib\/jvm\/${JVM}/" /etc/default/$TOMCAT

# configure Apache if needed (Jk connector to Tomcat)
if [ -e /etc/apache2/sites-available/jktomcat.conf ]; then
    a2dissite 000-default
    a2ensite jktomcat

    # as jktomcat.conf comes from the tomcat-apache overlay; do other
    # tomcat-apache stuff here too...

    # disable 16tomcat-sslcert - only neded for standalone tomcat
    chmod -x /usr/lib/inithooks/firstboot.d/16tomcat-sslcert

    a2enmod jk
fi

# create convenience links to original conf that we overwrite
conf_files="tomcat-users.xml server.xml"
for conf in $conf_files; do
    ln -s /usr/share/$TOMCAT/etc/$conf /etc/$TOMCAT/$conf.orig
done

# from https://bugs.launchpad.net/ubuntu/+source/tomcat7/+bug/1232258
create_link() {
    ln -s $CATALINA_BASE/$1 $CATALINA_HOME/$1
}
create_link common
create_link server
create_link shared
create_link conf
create_link logs
mkdir -p $CATALINA_TMPDIR
chown tomcat $CATALINA_TMPDIR
